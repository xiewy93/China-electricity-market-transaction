# -*- coding: utf-8 -*-
"""
Created on Wed May  3 11:51:17 2017

@author: lenovo
"""

import pandas as pd
import scipy.stats as stats


class  simulation_action():
    
    def __init__(self,sell_num,buy_num,user_type):
        self.sell_num = sell_num
        self.buy_num = buy_num
        self.user_type = user_type
        
    def sum_quantity(self,x):
        a=0
        b=10
        assigned_sum_quantity = []
        sum_quantity = []
        user_id = ['user_'+str(i+1) for i in range(x)]
        for i in range(x):
            new = [round(j)*1000 for j in pd.Series(stats.uniform.rvs(a,b,size=3))]
            sum_new = sum(new)
            assigned_sum_quantity.append(new)
            sum_quantity.append(sum_new)
            
        df=pd.DataFrame({'user_id':user_id,'assigned_sum_quantity':assigned_sum_quantity,'sum_quantity':sum_quantity},columns=['user_id','assigned_sum_quantity','sum_quantity']) 
        return df
        
    def assigned_price(self,x):
        assigned_price = []
        df = self.sum_quantity(x)
        if self.user_type=='routine_transactions':
            for i in range(x):
                new = [round(j,3) for j in pd.Series(stats.uniform.rvs(0.288*(1-0.15),0.288*(1+0.15),size=3))]
                assigned_price.append(new)
        elif self.user_type=='routine_translation_transactions':
            for i in range(x):
                new = [round(j,3) for j in pd.Series(stats.uniform.rvs(0.288-0.05,0.288+0.05,size=3))]
                assigned_price.append(new)
        elif self.user_type=='precision_support_transactions':
            for i in range(x):
                new = [round(j,3) for j in pd.Series(stats.uniform.rvs(0.288*(1-0.3),0.288*(1+0.3),size=3))]
                assigned_price.append(new)
        elif self.user_type=='precision_translation_transactions':
             for i in range(x):
                new = [round(j,3) for j in pd.Series(stats.uniform.rvs(0.288-0.09,0.288+0.09,size=3))]
                assigned_price.append(new)
                
        df['assigned_price']=assigned_price
        return df
        
    def uniform_forms(self,x):    
        df=self.assigned_price(x)
        df_2=[]
        for i in range(len(df)):
            for j in range(len(df.ix[i,1])):
                df_2.append([df.ix[i,0],df.ix[i,3][j],df.ix[i,1][j]])
                
        df_2=pd.DataFrame(df_2)                
        return df_2
     
    def hh(self):
        buyer = self.uniform_forms(self.buy_num)
        seller = self.uniform_forms(self.sell_num)
        return buyer,seller
        
if __name__=='__main__':
    sell_num,buy_num =10,8
    user_type = 'routine_transactions'
 
    
pre_auction=simulation_action(sell_num,buy_num,user_type)          
buyer,seller=pre_auction.hh()   
seller.columns=['userid','price','quantity']
buyer.columns=['userid','price','quantity']
      
        
